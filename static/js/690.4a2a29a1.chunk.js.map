{"version":3,"file":"static/js/690.4a2a29a1.chunk.js","mappings":"iRAQMA,EAAS,CACbC,MAAO,GACPC,SAAU,IAGNC,EAAyBC,EAAAA,KAAaC,MAAM,CAChDJ,MAAOG,EAAAA,KAAaH,MAAM,0BAA0BK,SAAS,YAC7DJ,SAAUE,EAAAA,KAAaE,SAAS,cAGrBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAMFE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAed,EACfe,iBAAkBZ,EAClBa,SAPmB,SAAAhB,GACnBQ,GAASS,EAAAA,EAAAA,IAAMjB,GAChB,IAQD,OACE,SAACkB,EAAA,EAAD,WACIR,IACA,kBAAMM,SAAUJ,EAAOO,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOb,EAAOZ,OAAOC,MACrByB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ5B,OAAS6B,QAAQlB,EAAOmB,OAAO9B,OACrD+B,WAAYpB,EAAOiB,QAAQ5B,OAASW,EAAOmB,OAAO9B,MAClDgC,OAAO,YAET,SAACb,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNU,KAAK,WACLT,MAAOb,EAAOZ,OAAOE,SACrBwB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ3B,UAAY4B,QAAQlB,EAAOmB,OAAO7B,UACxD8B,WAAYpB,EAAOiB,QAAQ3B,UAAYU,EAAOmB,OAAO7B,SACrD+B,OAAO,YAET,SAACE,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYhB,WAAS,EAACa,KAAK,SAA3D,wBAOT,E,UC/Dc,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAGF,SAAChC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport TextField from '@mui/material/TextField';\nimport { Box, Button } from '@mui/material';\nimport { useAuth } from 'hooks';\n\nconst values = {\n  email: '',\n  password: '',\n};\n\nconst SignInValidationSchema = Yup.object().shape({\n  email: Yup.string().email('The email is incorrect').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isRefreshing } = useAuth();\n\n  const handleSubmit = values => {\n    dispatch(login(values));\n  };\n\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: SignInValidationSchema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Box>\n      {!isRefreshing && (\n        <form onSubmit={formik.handleSubmit}>\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            margin=\"normal\"\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      )}\n    </Box>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["values","email","password","SignInValidationSchema","Yup","shape","required","LoginForm","dispatch","useDispatch","isRefreshing","useAuth","formik","useFormik","initialValues","validationSchema","onSubmit","login","Box","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","margin","type","Button","color","variant","Login","Helmet"],"sourceRoot":""}